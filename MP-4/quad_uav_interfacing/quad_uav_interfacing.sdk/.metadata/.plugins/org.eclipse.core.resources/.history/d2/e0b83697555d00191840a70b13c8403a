/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xuartps.h"
#include <stdlib.h>

uint8_t get_ZED_buf[1002];

int main()
{
    init_platform();

    // Setup UART
    XUartPs uart_ps;
    XUartPs_Config *uart_config_ptr;
    uart_config_ptr = XUartPs_LookupConfig(XPAR_XUARTPS_0_DEVICE_ID);
    if(uart_config_ptr == NULL) {
		return EXIT_FAILURE;
	}
    s32 status = XUartPs_CfgInitialize(&uart_ps, uart_config_ptr, uart_config_ptr->BaseAddress);
    if(status != XST_SUCCESS) {
		return EXIT_FAILURE;
	}

    float x,y,z,yaw;

    get_ZED_buf[1001] = 0;  // Make sure buffer is NULL terminated
    get_ZED_buf[0] = 'S';
    XUartPs_Send(&uart_ps, get_ZED_buf, 1);

    XUartPs_Recv(&uart_ps, get_ZED_buf, 16);
    x = *( (float*) (&get_ZED_buf[0] ) );
    y = *( (float*) (&get_ZED_buf[4] ) );
    z = *( (float*) (&get_ZED_buf[8] ) );
    yaw = *( (float*) (&get_ZED_buf[12] ) );
    get_ZED_buf[0] = 'D';
    XUartPs_Send(&uart_ps, get_ZED_buf, 1);
    sprintf(get_ZED_buf,"\n pie X =%4.2f, Y=%4.2f, Z=%4.2f, Yaw=%4.2f\r\n",x,y,z,yaw);
    XUartPs_Send(&uart_ps, get_ZED_buf, 1000);
	/*xil_printf("%c\n", 'D');
	scanf("%s\n",get_ZED_buf);
	if(strlen(get_ZED_buf) > 6){
		
	}*/
    //printf("\n\n%s\n", get_ZED_buf);

    cleanup_platform();
    return 0;
}
